{"version":3,"sources":["webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.ticks.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.animation.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/_chartjs-color@2.2.0@chartjs-color/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.defaults.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.time.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.datasetController.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.element.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.category.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.interaction.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/_color-convert@0.5.3@color-convert/conversions.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.plugins.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.linear.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.line.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.layouts.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.scale.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.arc.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.controller.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.animations.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.tooltip.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.point.js","webpack:///src/components/control/monitor.vue","webpack:///./src/components/restfulapi/monitorapi.js","webpack:///./src/components/control/monitor.vue?b157","webpack:///./src/components/control/monitor.vue","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.line.js","webpack:///./node_modules/_color-name@1.1.4@color-name/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/chart.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/_chartjs-color-string@0.5.0@chartjs-color-string/color-string.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.helpers.js","webpack:///./node_modules/_color-convert@0.5.3@color-convert/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.scaleService.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","x","y","textWidth","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","drawLegendBox","halfFontSize","xLeft","yMiddle","fillText","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","formatters","values","value","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","logTick","toExponential","numDecimal","min","toFixed","logarithmic","remain","pow","Chart","Bubble","context","animation","animateRotate","animateScale","hover","mode","ds","arc","custom","valueAtIndexOrDefault","arcOpts","ilen","cutoutPercentage","rotation","PI","circumference","tooltips","callbacks","title","tooltipItem","dataLabel","slice","clone","doughnut","controllers","pie","DatasetController","dataElementType","Arc","linkScales","getRingIndex","ringIndex","j","reset","chartArea","availableWidth","availableHeight","offset","getMeta","startAngle","endAngle","start","cos","sin","end","contains0","contains90","contains180","contains270","cutout","size","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","updateElement","animationOpts","getDataset","calculateCircumference","_datasetIndex","_index","_model","model","elementOpts","pivot","element","arcs","hoverWidth","_chart","hoverBorderWidth","currentStep","numSteps","easing","render","onAnimationProgress","onAnimationComplete","Object","defineProperty","prototype","get","set","scales","xAxes","yAxes","showLines","xLabel","yLabel","scatter","convert","string","Color","obj","valid","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","undefined","r","red","l","lightness","v","w","whiteness","c","cyan","isValid","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","p","a","w1","w2","toJSON","result","source","target","prop","hasOwnProperty","toString","console","error","spaces","maxes","getValues","space","charAt","capped","chans","round","sname","args","Array","svalues","window","lineHeight","Title","lineCount","toLineHeight","textSize","pos","globalDefaults","titleX","titleY","titleFont","translate","createNewTitleBlockAndAttach","titleOpts","titleBlock","PolarArea","scaleService","Ticks","defaultConfig","animate","angleLines","color","gridLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","scale","getPointLabelFontOptions","pointLabelOptions","style","family","determineLimits","angle","getTextAlignForAngle","spacing","adjustPointPositionForLabelHeight","h","numberOrZero","param","isNumber","LinearRadialScale","LinearScaleBase","tickOpts","xCenter","yCenter","tickFontSize","drawingArea","determineDataLimits","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","rawValue","getRightValue","handleTickRangeOptions","getTickLimit","maxTicksLimit","ceil","convertTicksToLabels","getLabelForIndex","largestPossibleRadius","pointPosition","plFont","furthestLimits","t","b","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","longestText","angleRadians","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","beginAtZero","gridLineOpts","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","ticksAsNumbers","closePath","drawRadiusLine","tickFontColor","labelWidth","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","registerScaleType","scope","merge","moment","Scale","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","keys","sorter","arrayUnique","items","hash","out","interpolate","table","skey","sval","tkey","range","key","mid","i0","i1","lo","hi","lookup","prev","next","span","momentify","parser","format","parse","input","isNullOrUndef","time","startOf","valueOf","determineMajorUnit","unit","indexOf","generate","capacity","timeOpts","minor","minUnit","interval","factor","determineUnitForAutoTicks","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","last","milliseconds","determineStepSize","add","TimeScale","Error","mergeTicksOptions","warn","apply","jlen","timestamp","timestamps","isObject","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","bounds","_unit","duration","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","userCallback","getPixelForOffset","getPixelForValue","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","toRadians","maxRotation","cosRotation","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","autoSkip","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","splice","forEach","datasetElementType","addElements","updateIndex","xAxisID","yAxisID","getScaleForId","scaleID","destroy","_data","createMetaDataset","createMetaData","metaData","addElementAndReset","buildOrUpdateElements","configurable","enumerable","method","toUpperCase","base","res","object","resyncElements","transition","easingValue","removeHoverStyle","$previousStyle","setHoverStyle","getHoverColor","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","configuration","_view","_start","ease","view","actual","origin","c0","c1","isFinite","tooltipPosition","hasValue","DatasetScale","getLabels","xLabels","yLabels","findIndex","minIndex","maxIndex","valueCategory","offsetAmt","idx","valueWidth","widthOffset","valueHeight","heightOffset","_ticks","horz","valueDimension","getBasePixel","categoryPercentage","barPercentage","offsetGridLines","axis","rectangle","borderSkipped","bar","Rectangle","stack","rects","_ruler","getRuler","rectangleOptions","_xScale","_yScale","datasetLabel","updateElementGeometry","vscale","getValueScale","horizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacked","stacks","getStackCount","getStackIndex","name","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","controller","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","clipArea","unclipArea","horizontalBar","getRelativePosition","parseVisibleItems","handler","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","nearestItems","getCenterPoint","distance","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","modes","single","x-axis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","Radar","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","matches","match","eventListenerOptions","supports","addEventListener","passive","node","removeEventListener","createEvent","nativeEvent","addResizeListener","fn","thisArg","ticking","expando","resizer","document","createElement","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","requestAnimFrame","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","container","parentNode","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","_enabled","platform","css","keyframes","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","fromNativeEvent","addEvent","removeEvent","rgb2hsl","g","rgb2hsv","s","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","f","q","hwb2rgb","n","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","atan2","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","Line","Point","plugins","_plugins","_cacheId","register","plugin","unregister","clear","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","Bar","Doughnut","LinearScale","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","maxTicks","handleDirectionalChanges","rightValue","innerDimension","responsive","responsiveAnimationDuration","maintainAspectRatio","events","animationDuration","layout","construct","Scatter","tension","capBezierPoints","fill","current","previous","currentVM","vm","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","previousItem","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","_scale","dataIndex","resolve","uid","defaultValue","loopable","len","arrayEquals","a0","a1","v0","v1","klen","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","filterByPosition","where","sortByWeight","_tmpIndex_","boxes","layoutItem","props","layoutOptions","toPadding","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","box","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","labelsFromTicks","getLineValue","lineValue","computeTextSize","parseFontOptions","parseLineHeight","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","mirror","autoSkipPadding","labelOffset","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","tickWidth","scaleLabelOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","NaN","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","optionMajorTicks","isRotated","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","scaleLabelX","scaleLabelY","halfLineHeight","radar","lineElementOptions","lineTension","updateBezierControlPoints","pointElementOptions","pointRadius","hitRadius","pointHitRadius","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRotation","controlPoints","splineCurve","nextItem","controlPointPreviousX","controlPointPreviousY","controlPointNextX","controlPointNextY","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","inLabelRange","mouseX","chartX","chartY","pointRelativePosition","getAngleFromPoint","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","Animation","animations","Interaction","Tooltip","positionIsHorizontal","types","instances","configMerge","initConfig","_bufferedRender","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","cancelAnimation","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","reduce","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","tooltip","newOptions","lazy","_options","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","onComplete","animationObject","easingFunction","stepDecimal","onProgress","addAnimation","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","animating","hoverOptions","active","Controller","frameDuration","dropFrames","request","requestAnimationFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","filler","propagate","mappers","boundary","decodeFill","el","parseFloat","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","dataPoint","bubble","xScale","yScale","_resolveElementOptions","dsIndex","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","toPush","splitNewlines","str","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","xRange","mouseY","monitor","deviceMonitorTimer","deviceId","selectedAgentId","cpudata","memorydata","memoryNowPercentage","cpuNowPercentage","components","selectGroup","select_group","methods","getTimeOptions","date","Hours","getHours","Min","getMinutes","Sec","getSeconds","unshift","startDeviceMonitor","_this","promise_default","reject","intervalReportData","agentid","timeout","apiPut","then","catch","response","monitorapi_startIntermittentApi","controlproperty","handleresponse","log","deviceMonitor","setInterval","_this2","did","GetSystemMonitorData","agentId","_","getTime","myurl","apiGet","monitorapi_getDeviceStatusApi","connected","swal","clearInterval","ProcessMonitor","ToMemoryData","NewMemoryData","parseInt","drawCpuChart","drawMemoryChart","labelOptions","chart_default","suggestedMin","suggestedMax","getDeviceOption","msg","mounted","beforeDestroy","control_monitor","_h","$createElement","_c","_self","_m","_v","attrs","on","select-device","staticClass","md","sm","role","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","lineEnabled","showLine","steppedLine","stepped","cubicInterpolationMode","getPointBackgroundColor","getPointBorderColor","getPointBorderWidth","getPointRotation","pointOptions","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","area","capControlPoint","splineCurveMonotone","halfBorderWidth","inputs","basic","dom","implementation","animationService","pluginService","PluginBase","canvasHelpers","layoutService","clearRect","roundedRect","arcTo","rect","edgeLength","xOffset","yOffset","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","minSign","sign","maxSign","setMin","setMax","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","niceRange","niceNum","niceMin","niceMax","almostWhole","numSpaces","almostEquals","generateTicks","colorNames","rgba","percentaString","hsla","num","hexDouble","getRgb","getHsl","getAlpha","reverseNames","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","LOG10E","powerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","clientWidth","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","constructors","scaleConstructor","scaleDefaults","updateScaleDefaults","additions"],"mappings":"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","file":"static/js/2.07e69c62160a7ceb7e20.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.legend.js\n// module id = +rKJ\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.ticks.js\n// module id = /exf\n// module chunks = 2","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Bubble.js\n// module id = 0fPN\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.doughnut.js\n// module id = 1/9I\n// module chunks = 2","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.animation.js\n// module id = 3CMe\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.scatter.js\n// module id = 4AVV\n// module chunks = 2","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chartjs-color@2.2.0@chartjs-color/index.js\n// module id = 55hM\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.title.js\n// module id = 6B73\n// module chunks = 2","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.PolarArea.js\n// module id = 71i2\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.radialLinear.js\n// module id = 845/\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.defaults.js\n// module id = 91sw\n// module chunks = 2","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.time.js\n// module id = Aaas\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.datasetController.js\n// module id = As5g\n// module chunks = 2","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.element.js\n// module id = E2tS\n// module chunks = 2","'use strict';\n\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.category.js\n// module id = EamY\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.bar.js\n// module id = G7qN\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.interaction.js\n// module id = Gfnd\n// module chunks = 2","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Radar.js\n// module id = JZb8\n// module chunks = 2","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.dom.js\n// module id = KONI\n// module chunks = 2","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_color-convert@0.5.3@color-convert/conversions.js\n// module id = KY8J\n// module chunks = 2","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/elements/index.js\n// module id = LESb\n// module chunks = 2","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.plugins.js\n// module id = M12b\n// module chunks = 2","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.easing.js\n// module id = MXq0\n// module chunks = 2","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Bar.js\n// module id = N3IP\n// module chunks = 2","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Doughnut.js\n// module id = NzaU\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.linear.js\n// module id = O2Xr\n// module chunks = 2","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.js\n// module id = OOn5\n// module chunks = 2","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Scatter.js\n// module id = PGbB\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.line.js\n// module id = RZaP\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.polarArea.js\n// module id = Ro4R\n// module chunks = 2","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.basic.js\n// module id = SbgB\n// module chunks = 2","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.core.js\n// module id = SnZA\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.layouts.js\n// module id = Ttvm\n// module chunks = 2","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.scale.js\n// module id = VDjG\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.radar.js\n// module id = XAWy\n// module chunks = 2","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Line.js\n// module id = XR2G\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.arc.js\n// module id = ZMMa\n// module chunks = 2","'use strict';\n\nvar Animation = require('./core.animation');\nvar animations = require('./core.animations');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\nvar scaleService = require('../core/core.scaleService');\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.controller.js\n// module id = bYO9\n// module chunks = 2","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.animations.js\n// module id = cF5I\n// module chunks = 2","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.filler.js\n// module id = ctF1\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.bubble.js\n// module id = fGhJ\n// module chunks = 2","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.tooltip.js\n// module id = grzo\n// module chunks = 2","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/helpers/index.js\n// module id = h+p9\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.point.js\n// module id = l/Jv\n// module chunks = 2","<template>\n    <div>\n        <p class=\"header-line\"><i class=\"fa fa-line-chart c-blue m-r-10\" ></i>Device Monitor</p>\n        <el-col :span=\"6\">\n            <select-group @select-device=\"getDeviceOption\"></select-group>\n        </el-col>\n        <el-col :span=\"18\" class=\"m-t-20\">\n            <el-col :md=\"11\" :sm=\"12\">\n                <canvas id=\"cpuchart\" height=\"200\" role=\"img\"></canvas>\n            </el-col>\n            <el-col :md=\"11\" :sm=\"12\" :offset=\"1\">\n                <canvas id=\"memorychart\" height=\"200\" role=\"img\"></canvas>\n            </el-col>\n        </el-col>\n    </div>\n</template>\n\n<script>\n    import {startIntermittentApi, getDeviceStatusApi} from '../restfulapi/monitorapi'\n    import selectGroup from '../../common/select-group'\n    import {systemMonitorPlugin} from '@/assets/js/controlproperty'\n    import Chart from 'chart.js'\n    import handleResponse from '../restfulapi/handleresponse'\n\n    export default{\n        name: 'controlMonitor',\n        data(){\n            return {\n                deviceMonitorTimer: null,\n                deviceId:'',\n                selectedAgentId:'',\n                cpudata: new Array(7),\n                memorydata: new Array(7),\n                memoryNowPercentage: 0,\n                cpuNowPercentage: 0\n            }\n        },\n        components:{\n            selectGroup\n        },\n        methods:{\n            getTimeOptions(){\n                let options=[];\n                let date = new Date();\n                let time = \"\";\n                let Hours =  date.getHours();if(Hours<10) Hours = \"0\"+Hours;\n                let Min = date.getMinutes();if(Min<10) Min = \"0\"+Min;\n                let Sec =  date.getSeconds();if(Sec<10) Sec = \"0\"+Sec;\n                for (let i=0;i<=6;i++){\n                    time =  Hours+\":\"+Min+\":\"+Sec;\n                    options.unshift(time)\n                    Sec = Sec - 3;\n                    if(Sec<10&&0<=Sec){\n                        Sec = \"0\"+Sec;\n                    }else if(Sec<0){\n                        Sec=60+Sec;\n                        Min--;\n                        if(Min<10){\n                            Min = \"0\"+Min;\n                        }\n                    }\n                }\n                return options;\n            },\n            startDeviceMonitor(selectedAgentId, deviceId){\n                if(this.deviceMonitorTimer == null){\n                    startIntermittentApi(selectedAgentId, systemMonitorPlugin).then((data) => {\n                        handleResponse(data, (res) =>{\n                            if(res.result = true){\n                                console.log(this);\n                                this.deviceMonitor(selectedAgentId, deviceId);\n                                this.deviceMonitorTimer = window.setInterval(() => {\n                                    this.deviceMonitor(selectedAgentId, deviceId)\n                                },3000)\n                            }else{\n                                console.log(\"inetervalreport error\")\n                            }\n                        })\n                        \n                    })\n                }\n            },\n            deviceMonitor(selectedAgentId, deviceId){\n                getDeviceStatusApi(deviceId, selectedAgentId, systemMonitorPlugin).then((data) =>{\n                    handleResponse(data, (res)=>{\n                        if(res.connected == false){\n                            swal(\"\",\"this Device has been offline\",\"info\").then(function(){\n                                window.clearInterval(this.deviceMonitorTimer);\n                                return;\n                            });\n\n                        }else if(res.ProcessMonitor == undefined){\n                            swal(\"\",\"your data miss\",\"info\").then(\n                                function(){\n                                    window.clearInterval(this.deviceMonitorTimer)\n                                    return;\n                                }\n                            ); \n                        }\n                        this.cpuNowPercentage = res.ProcessMonitor[\"System Monitor Info\"][\"e\"][0].v;\n                        let ToMemoryData = res.ProcessMonitor[\"System Monitor Info\"][\"e\"][1].v\n                        let NewMemoryData = res.ProcessMonitor[\"System Monitor Info\"][\"e\"][2].v;\n                        this.memoryNowPercentage = parseInt(NewMemoryData/ToMemoryData*100);\n                        this.cpudata.push(this.cpuNowPercentage);\n                        this.cpudata.shift();\n                        this.memorydata.push(this.memoryNowPercentage);\n                        this.memorydata.shift();\n                        this.drawCpuChart()\n                        this.drawMemoryChart()\n                    })\n                    \n                   \n                })\n            },\n\n            drawCpuChart(){\n                let labelOptions = this.getTimeOptions();\n                let ctx = document.getElementById(\"cpuchart\").getContext('2d');\n                let chart = new Chart(ctx, {\n                    type: 'line',\n                    data: {\n                        datasets: [{\n                            label: 'CPU Usage('+this.cpuNowPercentage+'%)',\n                            data: this.cpudata,\n                            backgroundColor: \"transparent\",\n                            borderColor : \"rgba(51,122,183,0.5)\",\n                        }],\n                        labels: labelOptions\n                    },\n                    options: {\n                        animation: {\n                            duration: 0\n                        },\n                        title: {\n                            display: true,\n                            text: 'CPU Monitor',\n                            fontColor: \"#428bca\",\n                            lineHeight: \"1.2\",\n                            fontSize: \"17\"\n                        },\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    suggestedMin: 0,\n                                    suggestedMax: 100,\n                                    stepSize: 10\n                                }\n                            }]\n                        }\n                    }\n                });\n            },\n\n            drawMemoryChart(){\n\n                let labelOptions = this.getTimeOptions();\n                let ctx = document.getElementById(\"memorychart\").getContext('2d');\n                let chart = new Chart(ctx, {\n                    type: 'line',\n                    data: {\n                        datasets: [{\n                            label: 'Memory Usage('+ this.memoryNowPercentage+'%)',\n                            data: this.memorydata,\n                            backgroundColor: \"transparent\",\n                            borderColor : \"rgba(45,213,179,0.5)\",\n                        }],\n                        labels: labelOptions\n                    },\n\n                    options: {\n                        animation: {\n                            duration: 0\n                        },\n                        title: {\n                            display: true,\n                            text: 'Memory Monitor',\n                            fontColor: \"#337ab7\",\n                            lineHeight: \"1.2\",\n                            fontSize: \"17\"\n                        },\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    suggestedMin: 0,\n                                    suggestedMax: 100,\n                                    stepSize: 10\n                                }\n                            }]\n                        }\n                    }\n                });\n            },\n\n            getDeviceOption(msg){\n                this.startDeviceMonitor( msg.value, msg.key);\n            }\n        },\n\n        mounted(){\n            this.drawCpuChart(this.cpudata)\n            this.drawMemoryChart(this.memorydata)\n        },\n\n        beforeDestroy() {\n            window.clearInterval(this.deviceMonitorTimer);        \n            this.deviceMonitorTimer = null;\n        }\n    }\n</script>\n\n<style lang='scss' scoped>\n@import \"@/assets/css/colors.scss\";\n#cpuchart{\n    border: 1px solid $gray-color;\n}\n\n#memorychart{\n    border: 1px solid $primary-color;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/control/monitor.vue","import {apiGet, apiPut} from \"../../assets/js/baseapi\";\n\n\nlet startIntermittentApi = function(selectedAgentId, plugin){\n    return new Promise((resolve, reject) => {\n        let intervalReportData = {\n            agentid: selectedAgentId,\n            plugin: plugin,\n            interval: 1,\n            timeout: 60,\n        };\n\n        apiPut(\"rmm/v1/devicectrl/intermittent_report\", intervalReportData).then((data) => {\n            resolve(data);\n        }).catch((error) => {\n            resolve(error.response);\n        })\n    })\n}\nlet getDeviceStatusApi = function(did, selectedAgentId, plugin){\n    return new Promise((resolve, reject) => {\n        let GetSystemMonitorData = {\n            agentId: selectedAgentId,\n            plugin: plugin,\n            _: new Date().getTime(),\n        };\n        let myurl = \"rmm/v1/data/devices/\"+did+\"/latestdata\";\n\n        apiGet(myurl, GetSystemMonitorData).then((data) =>{\n            resolve(data);\n        }).catch((error) => {\n            resolve(error.response);\n        })\n    })\n}\n\n\n    \n\nexport {\n    startIntermittentApi,\n    getDeviceStatusApi\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/restfulapi/monitorapi.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('select-group',{on:{\"select-device\":_vm.getDeviceOption}})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"m-t-20\",attrs:{\"span\":18}},[_c('el-col',{attrs:{\"md\":11,\"sm\":12}},[_c('canvas',{attrs:{\"id\":\"cpuchart\",\"height\":\"200\",\"role\":\"img\"}})]),_vm._v(\" \"),_c('el-col',{attrs:{\"md\":11,\"sm\":12,\"offset\":1}},[_c('canvas',{attrs:{\"id\":\"memorychart\",\"height\":\"200\",\"role\":\"img\"}})])],1)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"header-line\"},[_c('i',{staticClass:\"fa fa-line-chart c-blue m-r-10\"}),_vm._v(\"Device Monitor\")])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-03fb164c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/control/monitor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-03fb164c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./monitor.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./monitor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./monitor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-03fb164c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./monitor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-03fb164c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/control/monitor.vue\n// module id = null\n// module chunks = ","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.line.js\n// module id = llvb\n// module chunks = 2","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_color-name@1.1.4@color-name/index.js\n// module id = mDKh\n// module chunks = 2","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.options.js\n// module id = naX5\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.js\n// module id = ol7G\n// module chunks = 2","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/plugins/index.js\n// module id = qLhI\n// module chunks = 2","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-in plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/chart.js\n// module id = uHRZ\n// module chunks = 2","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.canvas.js\n// module id = uS+2\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.linearbase.js\n// module id = usWm\n// module chunks = 2","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chartjs-color-string@0.5.0@chartjs-color-string/color-string.js\n// module id = vS0k\n// module chunks = 2","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.logarithmic.js\n// module id = wKJ8\n// module chunks = 2","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.helpers.js\n// module id = xdtd\n// module chunks = 2","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_color-convert@0.5.3@color-convert/index.js\n// module id = y6va\n// module chunks = 2","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.rectangle.js\n// module id = yHqn\n// module chunks = 2","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_chart.js@2.7.3@chart.js/src/core/core.scaleService.js\n// module id = yMAi\n// module chunks = 2"],"sourceRoot":""}